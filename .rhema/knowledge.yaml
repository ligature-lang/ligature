# Knowledge Base
# This file contains insights, patterns, and knowledge about the codebase

knowledge:
  - id: "INSIGHT-001"
    insight: "Async evaluation provides significant performance improvements for large configurations"
    confidence: "high"
    category: "performance"
    tags:
      - "performance"
      - "async"
      - "evaluation"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "crates/ligature-eval/src/async_evaluator.rs"
      evidence:
        - "Benchmark results show 40% improvement for large configs"
        - "Memory usage reduced by 60% with async processing"
        - "Progress reporting improves user experience"

  - id: "INSIGHT-002"
    insight: "Multi-crate workspace structure improves code organization and compilation times"
    confidence: "high"
    category: "architecture"
    tags:
      - "architecture"
      - "workspace"
      - "compilation"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "Cargo.toml"
        - "crates/"
      evidence:
        - "Incremental compilation works better with separate crates"
        - "Clear separation of concerns between components"
        - "Easier to maintain and test individual components"

  - id: "INSIGHT-003"
    insight: "XDG configuration management provides better cross-platform compatibility"
    confidence: "medium"
    category: "configuration"
    tags:
      - "configuration"
      - "xdg"
      - "cross-platform"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "crates/embouchure-xdg/src/"
      evidence:
        - "Follows platform conventions for config storage"
        - "Works consistently across Linux, macOS, and Windows"
        - "Integrates well with existing tools and workflows"

  - id: "INSIGHT-004"
    insight: "Expression caching with 99.95% hit rate dramatically improves performance"
    confidence: "high"
    category: "performance"
    tags:
      - "performance"
      - "caching"
      - "optimization"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "crates/ligature-eval/src/"
      evidence:
        - "99.95% cache hit rate achieved (target was 80-95%)"
        - "2.7x performance improvement over basic evaluator"
        - "1M+ ops/sec for simple function calls"

  - id: "INSIGHT-005"
    insight: "Value serialization issues are blocking multiple crates (krox, reed)"
    confidence: "high"
    category: "blocking"
    tags:
      - "serialization"
      - "blocking"
      - "ligature-eval"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "crates/ligature-eval/src/value.rs"
        - "krox/src/"
        - "apps/reed/src/"
      evidence:
        - "krox caching system cannot serialize Value types"
        - "reed benchmarking tool cannot serialize benchmark results"
        - "Multiple TODO comments indicate this is a critical blocker"

  - id: "INSIGHT-006"
    insight: "LSP symbol finding implementation provides professional-grade IDE integration"
    confidence: "high"
    category: "ide-integration"
    tags:
      - "ide-integration"
      - "lsp"
      - "symbol-finding"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "crates/ligature-lsp/src/"
      evidence:
        - "Complete cross-file symbol finding implementation"
        - "Import-aware completion with cross-module symbols"
        - "Enhanced workspace symbol search with module awareness"
        - "All 24 LSP tests passing"

  - id: "INSIGHT-007"
    insight: "Type-level computation system enables advanced type safety and validation"
    confidence: "high"
    category: "type-system"
    tags:
      - "type-system"
      - "type-level"
      - "validation"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "registers/stdlib/type-level/mod.lig"
      evidence:
        - "Complete type-level programming system implemented"
        - "Advanced subtyping with type classes"
        - "Dependent type computation capabilities"
        - "25+ real-world use cases demonstrated"

  - id: "INSIGHT-008"
    insight: "Compiler warnings cleanup is a significant code quality blocker"
    confidence: "high"
    category: "code-quality"
    tags:
      - "code-quality"
      - "compiler-warnings"
      - "technical-debt"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "crates/ligature-lsp/src/"
        - "crates/ligature-eval/src/"
      evidence:
        - "95+ compiler warnings in ligature-lsp"
        - "Unused imports and dead code warnings"
        - "Visibility issues need resolution"
        - "Blocking production readiness"

  - id: "INSIGHT-009"
    insight: "Cacophony CLI core functionality is complete but needs async evaluation integration"
    confidence: "medium"
    category: "cacophony"
    tags:
      - "cacophony"
      - "cli"
      - "async"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "apps/cacophony/src/"
      evidence:
        - "Core infrastructure 100% complete"
        - "Configuration loading 95% complete"
        - "CLI commands 100% complete"
        - "Plugin system 15% complete"
        - "Async evaluation integration 0% complete"

  - id: "INSIGHT-010"
    insight: "Performance monitoring system provides comprehensive optimization capabilities"
    confidence: "high"
    category: "performance"
    tags:
      - "performance"
      - "monitoring"
      - "optimization"
    created_date: "2024-08-10T01:00:00Z"
    context:
      related_files:
        - "apps/performance-monitor/src/"
      evidence:
        - "Runtime performance metrics with automatic collection"
        - "Performance regression tests with baseline establishment"
        - "Adaptive optimization engine with learning capabilities"
        - "Performance monitoring CLI tool with multiple output formats"
