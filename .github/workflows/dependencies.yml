name: Dependencies

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  # Check for outdated dependencies
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-outdated
        run: cargo install cargo-outdated

      - name: Check for outdated dependencies
        run: |
          echo "Checking for outdated dependencies..."
          cargo outdated --exit-code 1 || {
            echo "Found outdated dependencies:"
            cargo outdated
            echo "Consider updating dependencies using:"
            echo "cargo update"
            echo "Or create a PR with updated dependencies"
          }

  # Update dependencies (optional)
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Update dependencies
        run: |
          echo "Updating dependencies..."
          cargo update
          
          # Check if any dependencies were updated
          if ! git diff --quiet Cargo.lock; then
            echo "Dependencies updated. Creating PR..."
            
            # Configure git
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            # Create branch and commit
            git checkout -b "deps/update-$(date +%Y%m%d)"
            git add Cargo.lock
            git commit -m "chore: update dependencies"
            
            # Push branch
            git push origin "deps/update-$(date +%Y%m%d)"
          else
            echo "No dependencies to update"
          fi

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit --deny warnings

  # Dependency graph
  dependency-graph:
    name: Dependency Graph
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-deps
        run: cargo install cargo-deps

      - name: Generate dependency graph
        run: |
          # Generate dependency graph for each crate
          for crate in ligature-ast ligature-parser ligature-types ligature-eval ligature-cli ligature-lsp krox keywork; do
            echo "Generating dependency graph for $crate..."
            cargo deps --package $crate --output-format dot --output deps-$crate.dot
          done
          
          # Create a summary
          echo "Dependency graphs generated:"
          ls -la deps-*.dot

  # License compliance
  license-check:
    name: License Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-license
        run: cargo install cargo-license

      - name: Check licenses
        run: |
          echo "Checking license compliance..."
          cargo license --json > licenses.json
          
          # Check for problematic licenses
          if cargo license | grep -E "(GPL|AGPL|LGPL)"; then
            echo "Warning: Found GPL-family licenses"
            exit 1
          fi
          
          echo "License check completed successfully" 