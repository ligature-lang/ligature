name: Test Coverage
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Generate coverage report
        run: |
          # Generate coverage for all crates
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

          # Generate HTML report
          cargo llvm-cov --all-features --workspace --html --output-dir coverage-html

          # Generate coverage summary
          cargo llvm-cov --all-features --workspace --text
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            lcov.info
            coverage-html/
          retention-days: 30
  crate-coverage:
    name: Crate Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - ligature-ast
          - ligature-parser
          - ligature-types
          - ligature-eval
          - ligature-cli
          - ligature-lsp
          - krox
          - keywork
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.crate }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.crate }}-
      - name: Generate coverage for ${{ matrix.crate }}
        run: |
          cargo llvm-cov --all-features --package ${{ matrix.crate }} --lcov --output-path lcov-${{ matrix.crate }}.info
          cargo llvm-cov --all-features --package ${{ matrix.crate }} --text
      - name: Upload crate coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.crate }}
          path: lcov-${{ matrix.crate }}.info
          retention-days: 30
  coverage-thresholds:
    name: Coverage Thresholds
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Download coverage artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage/
      - name: Check coverage thresholds
        run: |
          # Check overall coverage (should be >= 80%)
          cargo llvm-cov --all-features --workspace --text | grep "Total" | awk '{if ($2 < 80) exit 1}'

          echo "Coverage thresholds passed!"
  coverage-badges:
    name: Coverage Badges
    runs-on: ubuntu-latest
    needs: coverage
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Generate coverage percentage
        id: coverage
        run: |
          COVERAGE=$(cargo llvm-cov --all-features --workspace --text | grep "Total" | awk '{print $2}' | sed 's/%//')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"
      - name: Generate coverage badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: your-gist-id-here
          filename: coverage.json
          label: coverage
          message: ${{ steps.coverage.outputs.coverage }}%
          namedLogo: rust
          color: ${{ steps.coverage.outputs.coverage >= 90 && 'brightgreen' || steps.coverage.outputs.coverage >= 80 && 'green' || steps.coverage.outputs.coverage >= 70 && 'yellow' || 'red' }}
