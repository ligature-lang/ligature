-- Networking collection configuration
-- module Networking

let collection = {
  name = "networking",
  description = "VPC and networking infrastructure",
  dependencies = [],
  operations = ["plan", "apply", "destroy"],
  environments = ["dev", "staging", "prod"],
  
  -- Terraform-specific configuration
  terraform = {
    -- VPC configuration
    vpc = {
      cidr_block = "${VPC_CIDR}",
      enable_dns_hostnames = true,
      enable_dns_support = true,
      tags = {
        Name = "${ENVIRONMENT}-vpc",
        Environment = "${ENVIRONMENT}",
        ManagedBy = "cacophony"
      }
    },
    
    -- Subnets
    subnets = {
      public = [{
        cidr_block = "10.0.1.0/24",
        availability_zone = "us-west-2a",
        map_public_ip_on_launch = true,
        tags = {
          Name = "${ENVIRONMENT}-public-subnet-1",
          Type = "public"
        }
      }, {
        cidr_block = "10.0.2.0/24",
        availability_zone = "us-west-2b",
        map_public_ip_on_launch = true,
        tags = {
          Name = "${ENVIRONMENT}-public-subnet-2",
          Type = "public"
        }
      }],
      
      private = [{
        cidr_block = "10.0.10.0/24",
        availability_zone = "us-west-2a",
        tags = {
          Name = "${ENVIRONMENT}-private-subnet-1",
          Type = "private"
        }
      }, {
        cidr_block = "10.0.11.0/24",
        availability_zone = "us-west-2b",
        tags = {
          Name = "${ENVIRONMENT}-private-subnet-2",
          Type = "private"
        }
      }]
    },
    
    -- Internet Gateway
    internet_gateway = {
      tags = {
        Name = "${ENVIRONMENT}-igw"
      }
    },
    
    -- Route Tables
    route_tables = {
      public = {
        routes = [{
          cidr_block = "0.0.0.0/0",
          gateway_id = "${internet_gateway.id}"
        }],
        tags = {
          Name = "${ENVIRONMENT}-public-rt"
        }
      },
      
      private = {
        routes = [{
          cidr_block = "0.0.0.0/0",
          nat_gateway_id = "${nat_gateway.id}"
        }],
        tags = {
          Name = "${ENVIRONMENT}-private-rt"
        }
      }
    },
    
    -- NAT Gateway
    nat_gateway = {
      allocation_id = "${elastic_ip.id}",
      subnet_id = "${public_subnet_1.id}",
      tags = {
        Name = "${ENVIRONMENT}-nat-gateway"
      }
    },
    
    -- Security Groups
    security_groups = {
      web = {
        name = "${ENVIRONMENT}-web-sg",
        description = "Security group for web servers",
        ingress_rules = [{
          from_port = 80,
          to_port = 80,
          protocol = "tcp",
          cidr_blocks = ["0.0.0.0/0"]
        }, {
          from_port = 443,
          to_port = 443,
          protocol = "tcp",
          cidr_blocks = ["0.0.0.0/0"]
        }, {
          from_port = 22,
          to_port = 22,
          protocol = "tcp",
          cidr_blocks = ["10.0.0.0/16"]
        }],
        egress_rules = [{
          from_port = 0,
          to_port = 0,
          protocol = "-1",
          cidr_blocks = ["0.0.0.0/0"]
        }],
        tags = {
          Name = "${ENVIRONMENT}-web-sg"
        }
      },
      
      database = {
        name = "${ENVIRONMENT}-db-sg",
        description = "Security group for database servers",
        ingress_rules = [{
          from_port = 5432,
          to_port = 5432,
          protocol = "tcp",
          security_groups = ["${web_security_group.id}"]
        }],
        egress_rules = [{
          from_port = 0,
          to_port = 0,
          protocol = "-1",
          cidr_blocks = ["0.0.0.0/0"]
        }],
        tags = {
          Name = "${ENVIRONMENT}-db-sg"
        }
      }
    }
  }
};

export collection; 